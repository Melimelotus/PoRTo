[
    {
        "toolname": "Syspath",
        "tooltip": "add porto folder to syspath",
        "icon_full_path": "pythonFamily.png",
        "icon_label": "syspath",
        "source_type": "python",
        "command": "import sys\nsys.path.append('D:/User/Lisa/3D/PORTO/porto')"
    },
    {
        "toolname": "IncrementCurrentFile",
        "tooltip": "Increment current file",
        "icon_full_path": "D:/User/Lisa/3D/PORTO/porto/icons/incrementSave.png",
        "icon_label": "",
        "source_type": "python",
        "command": "from library import mayaUtils\nmayaUtils.MayaFile().increment_current_file()"
    },
    {
        "toolname": "Node Editor",
        "tooltip": "Display and edit relationships among nodes of the scene",
        "icon_full_path": "menuIconWindow.png",
        "icon_label": "NE",
        "source_type": "mel",
        "command": "NodeEditorWindow"
    },
    {
        "toolname": "Component Editor",
        "tooltip": "Edit various component values for the selected object(s)",
        "icon_full_path": "menuIconWindow.png",
        "icon_label": "CpEd",
        "source_type": "mel",
        "command": "ComponentEditor"
    },
    {
        "toolname": "SARN",
        "tooltip": "Rename objects in scene",
        "icon_full_path": "menuIconModify.png",
        "icon_label": "SaRN",
        "source_type": "mel",
        "command": "SearchAndReplaceNames"
    },
    {
        "toolname": "Cluster",
        "tooltip": "Creates a transform driven deformation for a set of points on an object (CVs, vertices, or lattice points).",
        "icon_full_path": "cluster.png",
        "icon_label": "",
        "source_type": "mel",
        "command": "CreateCluster"
    },
    {
        "toolname": "Locator",
        "tooltip": "Create a locator object on the grid",
        "icon_full_path": "locator.png",
        "icon_label": "",
        "source_type": "mel",
        "command": "CreateLocator"
    },
    {
        "toolname": "parentConstraint",
        "tooltip": "Parent constraint options",
        "icon_full_path": "parentConstraint.png",
        "icon_label": "pac",
        "source_type": "mel",
        "command": "ParentConstraintOptions"
    },
    {
        "toolname": "pointConstraint",
        "tooltip": "Point constraint options",
        "icon_full_path": "posConstraint.png",
        "icon_label": "poc",
        "source_type": "mel",
        "command": "PointConstraintOptions"
    },
    {
        "toolname": "orientConstraint",
        "tooltip": "Orient constraint options",
        "icon_full_path": "orientConstraint.png",
        "icon_label": "orc",
        "source_type": "mel",
        "command": "OrientConstraintOptions"
    },
    {
        "toolname": "aimConstraint",
        "tooltip": "Aim constraint options",
        "icon_full_path": "aimConstraint.png",
        "icon_label": "amc",
        "source_type": "mel",
        "command": "AimConstraintOptions"
    },
    {
        "toolname": "scaleConstraint",
        "tooltip": "Scale constraint options",
        "icon_full_path": "scaleConstraint.png",
        "icon_label": "scc",
        "source_type": "mel",
        "command": "ScaleConstraintOptions"
    },
    {
        "toolname": "LocatorToController",
        "tooltip": "Create basic controller hierarchies from selected locs",
        "icon_full_path": "D:/User/Lisa/3D/PORTO/porto/icons/locatorToController.png",
        "icon_label": "",
        "source_type": "python",
        "command": "from maya import cmds\nfrom library import mayaUtils\n\nselection_list=cmds.ls(sl=True)\n\nfor selected in selection_list:\n    name_base=selected[:-4]\n    print(name_base)\n    print(isinstance(name_base, str))\n    \n    controller_name=name_base+'_ctl'\n    cmds.circle(name=controller_name, degree=1)\n    \n    joint_name=name_base+'_jnt'\n    cmds.select(controller_name, replace=True)\n    cmds.joint(name=joint_name)\n    \n    parentspace_name=name_base+'_parentspace_grp'\n    mayaUtils.insert_parent(controller_name, parentspace_name)\n    \n    position_name=name_base+'_position_grp'\n    mayaUtils.insert_parent(parentspace_name, position_name)\n    \n    cmds.delete(\n        cmds.parentConstraint(selected, position_name, mo=False)\n    )"
    },
    {
        "toolname": "ColorChangerUI",
        "tooltip": "Change the color of the selected curves",
        "icon_full_path": "D:/User/Lisa/3D/PORTO/porto/icons/colorChanger.png",
        "icon_label": "",
        "source_type": "python",
        "command": "import importlib\n\nfrom library import curveShapes\nimportlib.reload(curveShapes)\n\ncurveShapes.ColorChangerUI().build_and_show()\n#"
    },
    {
        "toolname": "ShapeChangerUI",
        "tooltip": "Change the shape of the selected curves",
        "icon_full_path": "D:/User/Lisa/3D/PORTO/porto/icons/shapeChanger.png",
        "icon_label": "",
        "source_type": "python",
        "command": "import importlib\n\nfrom library import curveShapes\n\ncurveShapes.ShapeChangerUI().build_and_show()\n#"
    },
    {
        "toolname": "Switch Line Width",
        "tooltip": "Switch lineWidth of selected shapes",
        "icon_full_path": "D:/User/Lisa/3D/PORTO/porto/icons/lineWidth.png",
        "icon_label": "width",
        "source_type": "python",
        "command": "import importlib\nfrom library import curveShapes\nfrom library import mayaUtils\n\nimportlib.reload(curveShapes)\nimportlib.reload(mayaUtils)\n\n@mayaUtils.apply_to_relative_selected_shapes\ndef execute(target):\n    curveShapes.switch_line_width(target)\n    \nexecute()"
    },
    {
        "toolname": "PoseReaderUI",
        "tooltip": "Create a pose reader setup",
        "icon_full_path": "angleBetween.svg",
        "icon_label": "",
        "source_type": "python",
        "command": "import importlib\n\nfrom library import setups\nimportlib.reload(setups)\n\nsetups.PoseReaderUI().build_and_show()\n#"
    },
    {
        "toolname": "Plane",
        "tooltip": "Polygon Plane",
        "icon_full_path": "polyMesh.png",
        "icon_label": "",
        "source_type": "mel",
        "command": "CreatePolygonPlane"
    },
    {
        "toolname": "Mirror",
        "tooltip": "Mirror",
        "icon_full_path": "polyMirrorGeometry.png",
        "icon_label": "",
        "source_type": "mel",
        "command": "MirrorPolygonGeometry"
    },
    {
        "toolname": "NURBS Plane",
        "tooltip": "NURBS Plane",
        "icon_full_path": "plane.png",
        "icon_label": "",
        "source_type": "mel",
        "command": "CreateNURBSPlane"
    },
    {
        "toolname": "rebuildSurface",
        "tooltip": "Rebuild surfaces options",
        "icon_full_path": "rebuildSurface.png",
        "icon_label": "rebuild",
        "source_type": "mel",
        "command": "RebuildSurfacesOptions"
    },
    {
        "toolname": "Add Influence",
        "tooltip": "Add influence options",
        "icon_full_path": "menuIconSkinning.png",
        "icon_label": "addInf",
        "source_type": "mel",
        "command": "AddInfluenceOptions"
    },
    {
        "toolname": "Remove Unused Influences",
        "tooltip": "Select the skin and unused joints and influences will be disconnected to improve performance.",
        "icon_full_path": "menuIconSkinning.png",
        "icon_label": "RUI",
        "source_type": "mel",
        "command": "RemoveUnusedInfluences"
    },
    {
        "toolname": "Copy Vertex Weights",
        "tooltip": "Copy the weight of a vertex to paste it onto other vertices",
        "icon_full_path": "menuIconSkinning.png",
        "icon_label": "CVW",
        "source_type": "mel",
        "command": "CopyVertexWeights"
    },
    {
        "toolname": "Paste Vertex Weights",
        "tooltip": "Paste the weight of a copied vertex onto other vertices",
        "icon_full_path": "menuIconSkinning.png",
        "icon_label": "PVW",
        "source_type": "mel",
        "command": "PasteVertexWeights"
    },
    {
        "toolname": "CopySkin",
        "tooltip": "Copy skin weights options",
        "icon_full_path": "menuIconSkinning.png",
        "icon_label": "copy",
        "source_type": "mel",
        "command": "CopySkinWeightsOptions"
    },
    {
        "toolname": "MirrorSkin",
        "tooltip": "Mirror skin weights options",
        "icon_full_path": "menuIconSkinning.png",
        "icon_label": "mirror",
        "source_type": "mel",
        "command": "MirrorSkinWeightsOptions"
    },
    {
        "toolname": "copyJointOrient",
        "tooltip": "copy joint orientation of first selected joint",
        "icon_full_path": "pythonFamily.png",
        "icon_label": "copyJointOrient",
        "source_type": "python",
        "command": "from maya import cmds\n\nselection_list=cmds.ls(sl=True)\n\nfor axis in ['X', 'Y', 'Z']:\n    cmds.setAttr(selection_list[1]+'.jointOrient'+axis, cmds.getAttr(selection_list[0]+'.jointOrient'+axis))"
    },
    {
        "toolname": "Reset Transformation Values",
        "tooltip": "Reset transform values on selected nodes",
        "icon_full_path": "pythonFamily.png",
        "icon_label": "reset",
        "source_type": "python",
        "command": "import importlib\n\nfrom library import mayaUtils\n\n@mayaUtils.apply_to_selection\ndef execute(target):\n    mayaUtils.reset_transform_values(target)\n    \nexecute()\n#"
    },
    {
        "toolname": "label",
        "tooltip": "tooltip",
        "icon_full_path": "menuIconEdit.png",
        "icon_label": "icon label",
        "source_type": "mel",
        "command": "Undo"
    }
]