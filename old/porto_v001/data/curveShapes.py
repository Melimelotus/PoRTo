"""Module holding data that can be used for creating specific controller shapes:
point coordinates, shape names, categories...

The coordinates of shapes do not go beyond -1 or 1 in any axis.
"""

from collections import OrderedDict
from maya import cmds


class ShapesCoords():
    """Hold the coordinates for different shapes of curves."""

    def __init__(self):
        self.flat_coords_dict=self.define_flat_coords()
        self.volume_coords_dict=self.define_volume_coords()
        self.arrows_coords_dict=self.define_arrows_coords()
        self.curved_arrows_coords_dict=self.define_curved_arrows_coords()
        self.pins_coords_dict=self.define_pins_coords()

        self.all_types_coords_dict={
            'flat': self.flat_coords_dict,
            'volume': self.volume_coords_dict,
            'arrows': self.arrows_coords_dict,
            'curved_arrows': self.curved_arrows_coords_dict,
            'pins': self.pins_coords_dict,
        }
        return
    
    def __repr__(self):
        """Represent the class data."""
        # Get all class attributes
        attributes_list=[]
        for curve_type, curve_type_coords_dict in self.all_types_coords_dict.items():
            curve_names=[key for key in curve_type_coords_dict.keys()]
            attributes_list.append(
                '{curve_type}:{curve_names},'.format(
                    curve_type=curve_type,
                    curve_names=str(curve_names),
                )
            )

        # Build repr
        repr="{className}({attributes})".format(
                className=self.__class__.__name__,
                attributes=''.join(attributes_list))
        return repr

    def define_arrows_coords(self):
        """Return the name and coordinates of all 'arrows' curve shapes."""
        arrows_coords_dict=OrderedDict([
            ('arrow', [(0.0, 1.0, 0.0), (-0.25, 0.625, -0.0), (-0.1, 0.625, -0.0), (-0.1, 0.0, 0.0), (0.1, 0.0, 0.0), (0.1, 0.625, -0.0), (0.25, 0.625, -0.0), (0.0, 1.0, 0.0)]),
            ('arrowBi', [(0.0, -1.0, -0.0), (-0.25, -0.625, 0.0), (-0.1, -0.625, 0.0), (-0.1, 0.625, -0.0), (-0.25, 0.625, -0.0), (0.0, 1.0, 0.0), (0.25, 0.625, -0.0), (0.1, 0.625, -0.0), (0.1, -0.625, 0.0), (0.25, -0.625, 0.0), (0.0, -1.0, -0.0)]),
            ('arrowTri', [(0.0, 0.0, 1.0), (0.25, -0.0, 0.625), (0.1, 0.0, 0.625), (0.1, 0.0, 0.058), (0.591, 0.0, -0.226), (0.666, 0.0, -0.096), (0.866, 0.0, -0.5), (0.416, -0.0, -0.529), (0.491, 0.0, -0.399), (0.0, 0.0, -0.115), (-0.491, 0.0, -0.399), (-0.416, 0.0, -0.529), (-0.866, 0.0, -0.5), (-0.666, -0.0, -0.096), (-0.591, 0.0, -0.226), (-0.1, 0.0, 0.058), (-0.1, 0.0, 0.625), (-0.25, 0.0, 0.625), (0.0, 0.0, 1.0)]),
            ('arrowQuad', [(-0.1, 0.0, -0.1), (-0.1, 0.0, -0.625), (-0.25, 0.0, -0.625), (0.0, 0.0, -1.0), (0.25, 0.0, -0.625), (0.1, 0.0, -0.625), (0.1, 0.0, -0.1), (0.625, 0.0, -0.1), (0.625, 0.0, -0.25), (1.0, 0.0, 0.0), (0.625, 0.0, 0.25), (0.625, 0.0, 0.1), (0.1, 0.0, 0.1), (0.1, 0.0, 0.625), (0.25, 0.0, 0.625), (0.0, 0.0, 1.0), (-0.25, 0.0, 0.625), (-0.1, 0.0, 0.625), (-0.1, 0.0, 0.1), (-0.625, 0.0, 0.1), (-0.625, 0.0, 0.25), (-1.0, 0.0, 0.0), (-0.625, 0.0, -0.25), (-0.625, 0.0, -0.1), (-0.1, 0.0, -0.1)]),
            ('thinArrow',[(0.0, 0.0, 0.0), (0.0, 1.0, 0.0), (0.0, 0.813, 0.125), (0.125, 0.813, 0.0), (0.0, 0.813, -0.125), (-0.125, 0.813, 0.0), (0.0, 0.813, 0.125), (0.0, 1.0, 0.0), (0.125, 0.813, 0.0), (0.0, 1.0, 0.0), (0.0, 0.813, -0.125), (0.0, 1.0, 0.0), (-0.125, 0.813, 0.0)]),
        ])
        return arrows_coords_dict
    
    def define_curved_arrows_coords(self):
        """Return the name and coordinates of all 'curved arrows' curve shapes."""
        curved_arrows_coords_dict=OrderedDict([
            ('curvedArrow',  [(-0.12, 0.81, -0.325), (-0.25, 0.813, -0.325), (0.0, 1.0, 0.0), (0.25, 0.813, -0.325), (0.12, 0.81, -0.325), (0.12, 0.573, -0.507), (0.12, 0.297, -0.621), (0.12, 0.0, -0.66), (0.12, -0.297, -0.621), (0.12, -0.573, -0.507), (0.12, -0.81, -0.325), (0.12, -0.992, -0.087), (-0.12, -0.992, -0.087), (-0.12, -0.81, -0.325), (-0.12, -0.573, -0.507), (-0.12, -0.297, -0.621), (-0.12, 0.0, -0.66), (-0.12, 0.297, -0.621), (-0.12, 0.573, -0.507), (-0.12, 0.81, -0.325)]),
            ('curvedArrowBi', [(-0.12, -0.81, -0.325), (-0.25, -0.813, -0.325), (0.0, -1.0, -0.0), (0.25, -0.813, -0.325), (0.12, -0.81, -0.325), (0.12, -0.573, -0.507), (0.12, -0.297, -0.621), (0.12, 0.0, -0.66), (0.12, 0.297, -0.621), (0.12, 0.573, -0.507), (0.12, 0.81, -0.325), (0.25, 0.813, -0.325), (0.0, 1.0, 0.0), (-0.25, 0.813, -0.325), (-0.12, 0.81, -0.325), (-0.12, 0.573, -0.507), (-0.12, 0.297, -0.621), (-0.12, 0.0, -0.66), (-0.12, -0.297, -0.621), (-0.12, -0.573, -0.507), (-0.12, -0.81, -0.325)]),
            ('curvedArrowTri', [(0.0, 1.0, 0.0), (0.25, 0.813, -0.325), (0.12, 0.81, -0.325), (0.12, 0.573, -0.507), (0.12, 0.297, -0.621), (0.12, 0.069, -0.651), (0.317, -0.044, -0.621), (0.556, -0.183, -0.507), (0.762, -0.301, -0.325), (0.829, -0.19, -0.325), (0.866, -0.5, -0.0), (0.579, -0.623, -0.325), (0.642, -0.509, -0.325), (0.436, -0.39, -0.507), (0.197, -0.252, -0.621), (0.0, -0.139, -0.651), (-0.197, -0.252, -0.621), (-0.436, -0.39, -0.507), (-0.642, -0.509, -0.325), (-0.579, -0.623, -0.325), (-0.866, -0.5, -0.0), (-0.829, -0.19, -0.325), (-0.762, -0.301, -0.325), (-0.556, -0.183, -0.507), (-0.317, -0.044, -0.621), (-0.12, 0.069, -0.651), (-0.12, 0.297, -0.621), (-0.12, 0.573, -0.507), (-0.12, 0.81, -0.325), (-0.25, 0.813, -0.325), (0.0, 1.0, 0.0)]),
            ('curvedArrowQuad',  [(0.0, 1.0, 0.0), (0.25, 0.813, -0.325), (0.12, 0.81, -0.325), (0.12, 0.573, -0.507), (0.12, 0.297, -0.621), (0.12, 0.12, -0.645), (0.297, 0.12, -0.621), (0.573, 0.12, -0.507), (0.81, 0.12, -0.325), (0.813, 0.25, -0.325), (1.0, 0.0, 0.0), (0.813, -0.25, -0.325), (0.81, -0.12, -0.325), (0.573, -0.12, -0.507), (0.297, -0.12, -0.621), (0.12, -0.12, -0.645), (0.12, -0.297, -0.621), (0.12, -0.573, -0.507), (0.12, -0.81, -0.325), (0.25, -0.813, -0.325), (0.0, -1.0, -0.0), (-0.25, -0.813, -0.325), (-0.12, -0.81, -0.325), (-0.12, -0.573, -0.507), (-0.12, -0.297, -0.621), (-0.12, -0.12, -0.645), (-0.297, -0.12, -0.621), (-0.573, -0.12, -0.507), (-0.81, -0.12, -0.325), (-0.813, -0.25, -0.325), (-1.0, 0.0, 0.0), (-0.813, 0.25, -0.325), (-0.81, 0.12, -0.325), (-0.573, 0.12, -0.507), (-0.297, 0.12, -0.621), (-0.12, 0.12, -0.645), (-0.12, 0.297, -0.621), (-0.12, 0.573, -0.507), (-0.12, 0.81, -0.325), (-0.25, 0.813, -0.325), (0.0, 1.0, 0.0)]),
            ('sideCurvedArrow', [(0.0, 0.794, -0.357), (0.0, 0.906, -0.47), (0.0, 1.0, -0.0), (0.0, 0.53, -0.094), (0.0, 0.644, -0.206), (0.0, 0.454, -0.351), (0.0, 0.235, -0.443), (0.0, 0.0, -0.473), (0.0, -0.235, -0.443), (0.0, -0.454, -0.351), (0.0, -0.644, -0.206), (0.0, -0.787, -0.018), (0.0, -0.972, -0.124), (0.0, -0.794, -0.357), (0.0, -0.561, -0.535), (0.0, -0.29, -0.648), (0.0, 0.0, -0.686), (0.0, 0.29, -0.648), (0.0, 0.561, -0.535), (0.0, 0.794, -0.357)]),
            ('sideCurvedArrowBi', [(0.0, 0.794, -0.357), (0.0, 0.906, -0.47), (0.0, 1.0, -0.0), (0.0, 0.53, -0.094), (0.0, 0.644, -0.206), (0.0, 0.454, -0.351), (0.0, 0.235, -0.443), (0.0, 0.0, -0.473), (0.0, -0.235, -0.443), (0.0, -0.454, -0.351), (0.0, -0.644, -0.206), (0.0, -0.53, -0.094), (0.0, -1.0, -0.0), (0.0, -0.906, -0.47), (0.0, -0.794, -0.357), (0.0, -0.561, -0.535), (0.0, -0.29, -0.648), (0.0, 0.0, -0.686), (0.0, 0.29, -0.648), (0.0, 0.561, -0.535), (0.0, 0.794, -0.357)]),
        ])
        return curved_arrows_coords_dict
    
    def define_flat_coords(self):
        """Return the name and coordinates of all 'flat' curve shapes."""
        flat_coords_dict=OrderedDict([
            ('circle8', [(0.0, 0.0, -1.0), (-0.707, 0.0, -0.707), (-1.0, 0.0, -0.0), (-0.707, -0.0, 0.707), (-0.0, -0.0, 1.0), (0.707, -0.0, 0.707), (1.0, -0.0, 0.0), (0.707, 0.0, -0.707), (0.0, 0.0, -1.0)]),
            ('circle16', [(0.0, 0.0, -1.0), (-0.383, 0.0, -0.924), (-0.707, 0.0, -0.707), (-0.924, 0.0, -0.383), (-1.0, -0.0, 0.0), (-0.924, -0.0, 0.383), (-0.707, -0.0, 0.707), (-0.383, -0.0, 0.924), (0.0, -0.0, 1.0), (0.383, -0.0, 0.924), (0.707, -0.0, 0.707), (0.924, -0.0, 0.383), (1.0, 0.0, -0.0), (0.924, 0.0, -0.383), (0.707, 0.0, -0.707), (0.383, 0.0, -0.924), (-0.0, 0.0, -1.0)]),
            ('circle32', [(0.0, 0.0, -1.0), (-0.195, 0.0, -0.981), (-0.383, 0.0, -0.924), (-0.556, 0.0, -0.831), (-0.707, 0.0, -0.707), (-0.831, 0.0, -0.556), (-0.924, 0.0, -0.383), (-0.981, 0.0, -0.195), (-1.0, 0.0, -0.0), (-0.981, -0.0, 0.195), (-0.924, -0.0, 0.383), (-0.831, -0.0, 0.556), (-0.707, -0.0, 0.707), (-0.556, -0.0, 0.831), (-0.383, -0.0, 0.924), (-0.195, -0.0, 0.981), (-0.0, -0.0, 1.0), (0.195, -0.0, 0.981), (0.383, -0.0, 0.924), (0.556, -0.0, 0.831), (0.707, -0.0, 0.707), (0.831, -0.0, 0.556), (0.924, -0.0, 0.383), (0.981, -0.0, 0.195), (1.0, -0.0, 0.0), (0.981, 0.0, -0.195), (0.924, 0.0, -0.383), (0.831, 0.0, -0.556), (0.707, 0.0, -0.707), (0.556, 0.0, -0.831), (0.383, 0.0, -0.924), (0.195, 0.0, -0.981), (0.0, 0.0, -1.0)]),
            ('square', [(-1.0, 0.0, 1.0), (1.0, 0.0, 1.0), (1.0, -0.0, -1.0), (-1.0, -0.0, -1.0), (-1.0, 0.0, 1.0)]),
            ('plus', [(-0.25, 0.0, 0.25), (-0.25, 0.0, 1.0), (0.25, 0.0, 1.0), (0.25, 0.0, 0.25), (1.0, 0.0, 0.25), (1.0, -0.0, -0.25), (0.25, -0.0, -0.25), (0.25, -0.0, -1.0), (-0.25, -0.0, -1.0), (-0.25, -0.0, -0.25), (-1.0, -0.0, -0.25), (-1.0, 0.0, 0.25), (-0.25, 0.0, 0.25)]),
            ('spikedCircle', [(0.0, 0.0, -1.0), (-0.291, 0.0, -0.707), (-0.707, 0.0, -0.707), (-0.707, 0.0, -0.291), (-1.0, -0.0, 0.0), (-0.707, -0.0, 0.291), (-0.707, -0.0, 0.707), (-0.291, -0.0, 0.707), (0.0, -0.0, 1.0), (0.291, -0.0, 0.707), (0.707, -0.0, 0.707), (0.707, -0.0, 0.291), (1.0, 0.0, -0.0), (0.707, 0.0, -0.291), (0.707, 0.0, -0.707), (0.291, 0.0, -0.707), (-0.0, 0.0, -1.0)]),
            ('gear', [(0.061, 0.0, -0.757), (-0.024, 0.0, -0.999), (-0.36, 0.0, -0.932), (-0.346, 0.0, -0.676), (-0.492, 0.0, -0.579), (-0.724, 0.0, -0.689), (-0.914, 0.0, -0.405), (-0.723, 0.0, -0.234), (-0.757, 0.0, -0.061), (-0.999, 0.0, 0.024), (-0.932, 0.0, 0.36), (-0.676, 0.0, 0.346), (-0.579, 0.0, 0.492), (-0.689, 0.0, 0.724), (-0.405, 0.0, 0.914), (-0.234, 0.0, 0.723), (-0.061, 0.0, 0.757), (0.024, 0.0, 0.999), (0.36, 0.0, 0.932), (0.346, 0.0, 0.676), (0.492, 0.0, 0.579), (0.724, 0.0, 0.689), (0.914, 0.0, 0.405), (0.723, 0.0, 0.234), (0.757, 0.0, 0.061), (0.999, 0.0, -0.024), (0.932, 0.0, -0.36), (0.676, 0.0, -0.346), (0.579, 0.0, -0.492), (0.689, 0.0, -0.724), (0.405, 0.0, -0.914), (0.234, 0.0, -0.723), (0.061, 0.0, -0.757), (0.0, 0.0, -0.312), (-0.221, 0.0, -0.221), (-0.312, 0.0, -0.0), (-0.221, 0.0, 0.221), (-0.0, 0.0, 0.312), (0.221, 0.0, 0.221), (0.312, 0.0, -0.0), (0.221, 0.0, -0.221), (0.0, 0.0, -0.312)]),
        ])
        return flat_coords_dict
    
    def define_pins_coords(self):
        """Return the name and coordinates of all 'pins' curve shapes."""
        pins_coords_dict=OrderedDict([
            ('pinSquare',  [(0.0, 0.0, 0.0), (0.0, -0.0, -0.5), (-0.25, 0.0, -0.75), (0.0, -0.0, -1.0), (0.25, -0.0, -0.75), (0.0, -0.0, -0.5)]),
            ('pinSphere', [(0.0, 0.0, 0.0), (0.0, 0.0, -0.5), (0.0, 0.174, -0.576), (0.0, 0.25, -0.75), (0.0, 0.174, -0.924), (0.0, 0.0, -1.0), (0.0, -0.174, -0.924), (0.0, -0.25, -0.75), (0.0, -0.174, -0.576), (0.0, 0.0, -0.5), (0.174, 0.0, -0.576), (0.25, 0.0, -0.75), (0.174, -0.0, -0.924), (0.0, 0.0, -1.0), (-0.174, -0.0, -0.924), (-0.25, 0.0, -0.75), (-0.174, 0.0, -0.576), (0.0, 0.0, -0.5), (0.0, -0.174, -0.576), (0.0, -0.25, -0.75), (0.174, -0.174, -0.75), (0.25, 0.0, -0.75), (0.174, 0.174, -0.75), (0.0, 0.25, -0.75), (-0.174, 0.174, -0.75), (-0.25, 0.0, -0.75), (-0.174, -0.174, -0.75), (0.0, -0.25, -0.75)]),
        ])
        return pins_coords_dict
    
    def define_volume_coords(self):
        """Return the name and coordinates of all 'volume' curve shapes."""
        volume_coords_dict=OrderedDict([
            ('cube', [(-0.5, -0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (0.5, -0.5, -0.5), (0.5, -0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, 0.5), (-0.5, -0.5, 0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5), (0.5, -0.5, 0.5), (-0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (0.5, 0.5, 0.5)]),
            ('diamond', [(0.0, 0.5, 0.0), (0.0, 0.0, 0.5), (0.5, 0.0, 0.0), (0.0, 0.5, 0.0), (0.0, 0.0, -0.5), (-0.5, 0.0, 0.0), (-0.5, 0.0, 0.0), (0.0, -0.5, 0.0), (0.0, 0.0, -0.5), (0.5, 0.0, 0.0), (0.0, -0.5, 0.0), (0.0, 0.0, 0.5), (-0.5, 0.0, 0.0), (0.0, 0.5, 0.0)]),
            ('locator', [(0, 1, 0), (0, -1, 0), (0, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 0, -1)]),
            ('sphere',  [(-0.5, 0.0, 0.0), (-0.35, 0.35, 0.0), (0.0, 0.5, 0.0), (0.35, 0.35, 0.0), (0.5, 0.0, 0.0), (0.35, -0.35, 0.0), (0.0, -0.5, 0.0), (-0.35, -0.35, 0.0), (-0.5, 0.0, 0.0), (-0.35, 0.0, -0.35), (0.0, 0.0, -0.5), (0.35, 0.0, -0.35), (0.5, 0.0, 0.0), (0.35, 0.0, 0.35), (0.0, 0.0, 0.5), (-0.35, 0.0, 0.35), (-0.5, 0.0, 0.0), (-0.35, 0.0, -0.35), (0.0, 0.0, -0.5), (0.0, 0.35, -0.35), (0.0, 0.5, 0.0), (0.0, 0.35, 0.35), (0.0, 0.0, 0.5), (0.0, -0.35, 0.35), (0.0, -0.5, 0.0), (0.0, -0.35, -0.35), (0.0, 0.0, -0.5)]),
            ('tube', [(-0.5, -0.5, 0.0), (-0.5, 0.5, 0.0), (-0.35, 0.5, -0.35), (-0.35, -0.5, -0.35), (0.0, -0.5, -0.5), (0.0, 0.5, -0.5), (0.35, 0.5, -0.35), (0.35, -0.5, -0.35), (0.5, -0.5, 0.0), (0.5, 0.5, 0.0), (0.35, 0.5, 0.35), (0.35, -0.5, 0.35), (0.0, -0.5, 0.5), (0.0, 0.5, 0.5), (-0.35, 0.5, 0.35), (-0.35, -0.5, 0.35), (-0.5, -0.5, 0.0), (-0.35, -0.5, -0.35), (0.0, -0.5, -0.5), (0.35, -0.5, -0.35), (0.5, -0.5, 0.0), (0.35, -0.5, 0.35), (0.0, -0.5, 0.5), (-0.35, -0.5, 0.35), (-0.35, 0.5, 0.35), (-0.5, 0.5, 0.0), (-0.35, 0.5, -0.35), (0.0, 0.5, -0.5), (0.35, 0.5, -0.35), (0.5, 0.5, 0.0), (0.35, 0.5, 0.35), (0.0, 0.5, 0.5)]),
        ])
        return volume_coords_dict
    
    def draw_all_shapes(self):
        """Create a curve for each available shape."""
        for type_coords_dict in self.all_types_coords_dict.values():
            for curve_name, curve_coords in type_coords_dict.items():
                result=cmds.curve(
                    degree=1,
                    name=curve_name,
                    point=curve_coords,
                )
                unnamed_shape=cmds.listRelatives(result, s=True)
                cmds.rename(unnamed_shape, curve_name+'Shape')
        return
    #

#

################################# OLD! DELETE WHEN POSSIBLE!

def define_categories(): # OLD, DELETE WHEN POSSIBLE
    """Return an ordered dictionary that sorts shapes into several categories.

    PoRTo holds tools for quickly creating various curve shapes. These shapes
    are then sorted into different categories.
    This function return a dictionary that assigns a list of shapes to each
    category.

        >>>> {category: [shape names]}
    """
    # Order matters: interface curveShapeChanger has tabs that are created by
    # following the dictionary's order.
    ordered=OrderedDict()

    ordered['flat']=[
        'circle8', 'circle16', 'circle32', 'square', 'plus', 'spikedCircle',
        'gear']
    
    ordered['volume']=[
        'cube', 'diamond', 'locator', 'sphere', 'tube']
    
    ordered['arrows']=[
        'arrow', 'arrowBi', 'arrowTri', 'arrowQuad', 'thinArrow']
    
    ordered['curvedArrows']=[
        'curvedArrow', 'curvedArrowBi', 'curvedArrowTri', 'curvedArrowQuad',
        'flatCurvedArrow', 'flatCurvedArrowBi']
    
    ordered['pins']=[
        'pinSquare', 'pinSphere']

    return ordered

def define_curve_coords(): #OLD, DELETE WHEN POSSIBLE
    """Return a dictionary that holds shape names and coords."""
    # Each shape has its own icon. The icon should have the exact same name as
    # the shape.
    # Icons are NOT generated automatically! Therefore, any name change here
    # should be immediately reflected in the icons.
    coordsDic = {
        'arrow' : [
            (0.0, 1.0, 0.0), (-0.25, 0.625, -0.0), (-0.1, 0.625, -0.0),
            (-0.1, 0.0, 0.0), (0.1, 0.0, 0.0), (0.1, 0.625, -0.0),
            (0.25, 0.625, -0.0), (0.0, 1.0, 0.0)
            ],
        'arrowBi' : [
            (0.0, -1.0, -0.0), (-0.25, -0.625, 0.0), (-0.1, -0.625, 0.0),
            (-0.1, 0.625, -0.0), (-0.25, 0.625, -0.0), (0.0, 1.0, 0.0),
            (0.25, 0.625, -0.0), (0.1, 0.625, -0.0), (0.1, -0.625, 0.0),
            (0.25, -0.625, 0.0), (0.0, -1.0, -0.0)
            ],
        'arrowTri' : [
            (0.0, 0.0, 1.0), (0.25, -0.0, 0.625), (0.1, 0.0, 0.625),
            (0.1, 0.0, 0.058), (0.591, 0.0, -0.226), (0.666, 0.0, -0.096),
            (0.866, 0.0, -0.5), (0.416, -0.0, -0.529), (0.491, 0.0, -0.399),
            (0.0, 0.0, -0.115), (-0.491, 0.0, -0.399), (-0.416, 0.0, -0.529),
            (-0.866, 0.0, -0.5), (-0.666, -0.0, -0.096), (-0.591, 0.0, -0.226),
            (-0.1, 0.0, 0.058), (-0.1, 0.0, 0.625), (-0.25, 0.0, 0.625),
            (0.0, 0.0, 1.0)
            ],
        'arrowQuad' : [
            (-0.1, 0.0, -0.1), (-0.1, 0.0, -0.625), (-0.25, 0.0, -0.625),
            (0.0, 0.0, -1.0), (0.25, 0.0, -0.625), (0.1, 0.0, -0.625),
            (0.1, 0.0, -0.1), (0.625, 0.0, -0.1), (0.625, 0.0, -0.25),
            (1.0, 0.0, 0.0), (0.625, 0.0, 0.25), (0.625, 0.0, 0.1),
            (0.1, 0.0, 0.1), (0.1, 0.0, 0.625), (0.25, 0.0, 0.625),
            (0.0, 0.0, 1.0), (-0.25, 0.0, 0.625), (-0.1, 0.0, 0.625),
            (-0.1, 0.0, 0.1), (-0.625, 0.0, 0.1), (-0.625, 0.0, 0.25),
            (-1.0, 0.0, 0.0), (-0.625, 0.0, -0.25), (-0.625, 0.0, -0.1),
            (-0.1, 0.0, -0.1)
            ],
        'circle8' : [
            (0.0, 0.0, -1.0), (-0.707, 0.0, -0.707), (-1.0, 0.0, -0.0),
            (-0.707, -0.0, 0.707), (-0.0, -0.0, 1.0), (0.707, -0.0, 0.707),
            (1.0, -0.0, 0.0), (0.707, 0.0, -0.707), (0.0, 0.0, -1.0)
            ],
        'circle16' : [
            (0.0, 0.0, -1.0), (-0.383, 0.0, -0.924), (-0.707, 0.0, -0.707),
            (-0.924, 0.0, -0.383), (-1.0, -0.0, 0.0), (-0.924, -0.0, 0.383),
            (-0.707, -0.0, 0.707), (-0.383, -0.0, 0.924), (0.0, -0.0, 1.0),
            (0.383, -0.0, 0.924), (0.707, -0.0, 0.707), (0.924, -0.0, 0.383),
            (1.0, 0.0, -0.0), (0.924, 0.0, -0.383), (0.707, 0.0, -0.707),
            (0.383, 0.0, -0.924), (-0.0, 0.0, -1.0)
            ],
        'circle32' : [
            (0.0, 0.0, -1.0), (-0.195, 0.0, -0.981), (-0.383, 0.0, -0.924),
            (-0.556, 0.0, -0.831), (-0.707, 0.0, -0.707), (-0.831, 0.0, -0.556),
            (-0.924, 0.0, -0.383), (-0.981, 0.0, -0.195), (-1.0, 0.0, -0.0),
            (-0.981, -0.0, 0.195), (-0.924, -0.0, 0.383), (-0.831, -0.0, 0.556),
            (-0.707, -0.0, 0.707), (-0.556, -0.0, 0.831), (-0.383, -0.0, 0.924),
            (-0.195, -0.0, 0.981), (-0.0, -0.0, 1.0), (0.195, -0.0, 0.981),
            (0.383, -0.0, 0.924), (0.556, -0.0, 0.831), (0.707, -0.0, 0.707),
            (0.831, -0.0, 0.556), (0.924, -0.0, 0.383), (0.981, -0.0, 0.195),
            (1.0, -0.0, 0.0), (0.981, 0.0, -0.195), (0.924, 0.0, -0.383),
            (0.831, 0.0, -0.556), (0.707, 0.0, -0.707), (0.556, 0.0, -0.831),
            (0.383, 0.0, -0.924), (0.195, 0.0, -0.981), (0.0, 0.0, -1.0)
            ],
        'cube' : [
            (-0.5, -0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5),
            (0.5, -0.5, -0.5), (0.5, -0.5, 0.5), (0.5, 0.5, 0.5),
            (-0.5, 0.5, 0.5), (-0.5, -0.5, 0.5), (-0.5, -0.5, -0.5),
            (0.5, -0.5, -0.5), (0.5, -0.5, 0.5), (-0.5, -0.5, 0.5),
            (-0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5),
            (0.5, 0.5, 0.5)
            ],
        'curvedArrow' : [
            (-0.12, 0.81, -0.325), (-0.25, 0.813, -0.325), (0.0, 1.0, 0.0),
            (0.25, 0.813, -0.325), (0.12, 0.81, -0.325), (0.12, 0.573, -0.507),
            (0.12, 0.297, -0.621), (0.12, 0.0, -0.66), (0.12, -0.297, -0.621),
            (0.12, -0.573, -0.507), (0.12, -0.81, -0.325), (0.12, -0.992, -0.087),
            (-0.12, -0.992, -0.087), (-0.12, -0.81, -0.325), (-0.12, -0.573, -0.507),
            (-0.12, -0.297, -0.621), (-0.12, 0.0, -0.66), (-0.12, 0.297, -0.621),
            (-0.12, 0.573, -0.507), (-0.12, 0.81, -0.325)
            ],
        'curvedArrowBi' : [
            (-0.12, -0.81, -0.325), (-0.25, -0.813, -0.325), (0.0, -1.0, -0.0),
            (0.25, -0.813, -0.325), (0.12, -0.81, -0.325), (0.12, -0.573, -0.507),
            (0.12, -0.297, -0.621), (0.12, 0.0, -0.66), (0.12, 0.297, -0.621),
            (0.12, 0.573, -0.507), (0.12, 0.81, -0.325), (0.25, 0.813, -0.325),
            (0.0, 1.0, 0.0), (-0.25, 0.813, -0.325), (-0.12, 0.81, -0.325),
            (-0.12, 0.573, -0.507), (-0.12, 0.297, -0.621), (-0.12, 0.0, -0.66),
            (-0.12, -0.297, -0.621), (-0.12, -0.573, -0.507), (-0.12, -0.81, -0.325)
            ],
        'curvedArrowTri' : [
            (0.0, 1.0, 0.0), (0.25, 0.813, -0.325), (0.12, 0.81, -0.325),
            (0.12, 0.573, -0.507), (0.12, 0.297, -0.621), (0.12, 0.069, -0.651),
            (0.317, -0.044, -0.621), (0.556, -0.183, -0.507), (0.762, -0.301, -0.325),
            (0.829, -0.19, -0.325), (0.866, -0.5, -0.0), (0.579, -0.623, -0.325),
            (0.642, -0.509, -0.325), (0.436, -0.39, -0.507), (0.197, -0.252, -0.621),
            (0.0, -0.139, -0.651), (-0.197, -0.252, -0.621), (-0.436, -0.39, -0.507),
            (-0.642, -0.509, -0.325), (-0.579, -0.623, -0.325), (-0.866, -0.5, -0.0),
            (-0.829, -0.19, -0.325), (-0.762, -0.301, -0.325), (-0.556, -0.183, -0.507),
            (-0.317, -0.044, -0.621), (-0.12, 0.069, -0.651), (-0.12, 0.297, -0.621),
            (-0.12, 0.573, -0.507), (-0.12, 0.81, -0.325), (-0.25, 0.813, -0.325),
            (0.0, 1.0, 0.0)
            ],
        'curvedArrowQuad' : [
            (0.0, 1.0, 0.0), (0.25, 0.813, -0.325), (0.12, 0.81, -0.325),
            (0.12, 0.573, -0.507), (0.12, 0.297, -0.621), (0.12, 0.12, -0.645),
            (0.297, 0.12, -0.621), (0.573, 0.12, -0.507), (0.81, 0.12, -0.325),
            (0.813, 0.25, -0.325), (1.0, 0.0, 0.0), (0.813, -0.25, -0.325),
            (0.81, -0.12, -0.325), (0.573, -0.12, -0.507), (0.297, -0.12, -0.621),
            (0.12, -0.12, -0.645), (0.12, -0.297, -0.621), (0.12, -0.573, -0.507),
            (0.12, -0.81, -0.325), (0.25, -0.813, -0.325), (0.0, -1.0, -0.0),
            (-0.25, -0.813, -0.325), (-0.12, -0.81, -0.325), (-0.12, -0.573, -0.507),
            (-0.12, -0.297, -0.621), (-0.12, -0.12, -0.645), (-0.297, -0.12, -0.621),
            (-0.573, -0.12, -0.507), (-0.81, -0.12, -0.325), (-0.813, -0.25, -0.325),
            (-1.0, 0.0, 0.0), (-0.813, 0.25, -0.325), (-0.81, 0.12, -0.325),
            (-0.573, 0.12, -0.507), (-0.297, 0.12, -0.621), (-0.12, 0.12, -0.645),
            (-0.12, 0.297, -0.621), (-0.12, 0.573, -0.507), (-0.12, 0.81, -0.325),
            (-0.25, 0.813, -0.325), (0.0, 1.0, 0.0)
            ],
        'diamond' : [
            (0.0, 0.5, 0.0), (0.0, 0.0, 0.5), (0.5, 0.0, 0.0),
            (0.0, 0.5, 0.0), (0.0, 0.0, -0.5), (-0.5, 0.0, 0.0),
            (-0.5, 0.0, 0.0), (0.0, -0.5, 0.0), (0.0, 0.0, -0.5),
            (0.5, 0.0, 0.0), (0.0, -0.5, 0.0), (0.0, 0.0, 0.5),
            (-0.5, 0.0, 0.0), (0.0, 0.5, 0.0)
            ],
        'gear' : [
            (0.061, 0.0, -0.757), (-0.024, 0.0, -0.999), (-0.36, 0.0, -0.932),
            (-0.346, 0.0, -0.676), (-0.492, 0.0, -0.579), (-0.724, 0.0, -0.689),
            (-0.914, 0.0, -0.405), (-0.723, 0.0, -0.234), (-0.757, 0.0, -0.061),
            (-0.999, 0.0, 0.024), (-0.932, 0.0, 0.36), (-0.676, 0.0, 0.346),
            (-0.579, 0.0, 0.492), (-0.689, 0.0, 0.724), (-0.405, 0.0, 0.914),
            (-0.234, 0.0, 0.723), (-0.061, 0.0, 0.757), (0.024, 0.0, 0.999),
            (0.36, 0.0, 0.932), (0.346, 0.0, 0.676), (0.492, 0.0, 0.579),
            (0.724, 0.0, 0.689), (0.914, 0.0, 0.405), (0.723, 0.0, 0.234),
            (0.757, 0.0, 0.061), (0.999, 0.0, -0.024), (0.932, 0.0, -0.36),
            (0.676, 0.0, -0.346), (0.579, 0.0, -0.492), (0.689, 0.0, -0.724),
            (0.405, 0.0, -0.914), (0.234, 0.0, -0.723), (0.061, 0.0, -0.757),
            (0.0, 0.0, -0.312), (-0.221, 0.0, -0.221), (-0.312, 0.0, -0.0),
            (-0.221, 0.0, 0.221), (-0.0, 0.0, 0.312), (0.221, 0.0, 0.221),
            (0.312, 0.0, -0.0), (0.221, 0.0, -0.221), (0.0, 0.0, -0.312)
            ],
        'locator' : [
            (0, 1, 0), (0, -1, 0), (0, 0, 0), (1, 0, 0), (-1, 0, 0), (0, 0, 0),
            (0, 0, 1), (0, 0, -1)
            ],
        'pinSphere' : [
            (0.0, 0.0, 0.0), (0.0, 0.0, -0.5), (0.0, 0.174, -0.576),
            (0.0, 0.25, -0.75), (0.0, 0.174, -0.924), (0.0, 0.0, -1.0),
            (0.0, -0.174, -0.924), (0.0, -0.25, -0.75), (0.0, -0.174, -0.576),
            (0.0, 0.0, -0.5), (0.174, 0.0, -0.576), (0.25, 0.0, -0.75),
            (0.174, -0.0, -0.924), (0.0, 0.0, -1.0), (-0.174, -0.0, -0.924),
            (-0.25, 0.0, -0.75), (-0.174, 0.0, -0.576), (0.0, 0.0, -0.5),
            (0.0, -0.174, -0.576), (0.0, -0.25, -0.75), (0.174, -0.174, -0.75),
            (0.25, 0.0, -0.75), (0.174, 0.174, -0.75), (0.0, 0.25, -0.75),
            (-0.174, 0.174, -0.75), (-0.25, 0.0, -0.75), (-0.174, -0.174, -0.75),
            (0.0, -0.25, -0.75)
            ],
        'pinSquare' : [
            (0.0, 0.0, 0.0), (0.0, -0.0, -0.5), (-0.25, 0.0, -0.75),
            (0.0, -0.0, -1.0), (0.25, -0.0, -0.75), (0.0, -0.0, -0.5)
            ],
        'plus' : [
            (-0.25, 0.0, 0.25), (-0.25, 0.0, 1.0), (0.25, 0.0, 1.0),
            (0.25, 0.0, 0.25), (1.0, 0.0, 0.25), (1.0, -0.0, -0.25),
            (0.25, -0.0, -0.25), (0.25, -0.0, -1.0), (-0.25, -0.0, -1.0),
            (-0.25, -0.0, -0.25), (-1.0, -0.0, -0.25), (-1.0, 0.0, 0.25),
            (-0.25, 0.0, 0.25)
            ],
        'sphere' : [
            (-0.5, 0.0, 0.0), (-0.35, 0.35, 0.0), (0.0, 0.5, 0.0),
            (0.35, 0.35, 0.0), (0.5, 0.0, 0.0), (0.35, -0.35, 0.0),
            (0.0, -0.5, 0.0), (-0.35, -0.35, 0.0), (-0.5, 0.0, 0.0),
            (-0.35, 0.0, -0.35), (0.0, 0.0, -0.5), (0.35, 0.0, -0.35),
            (0.5, 0.0, 0.0), (0.35, 0.0, 0.35), (0.0, 0.0, 0.5),
            (-0.35, 0.0, 0.35), (-0.5, 0.0, 0.0), (-0.35, 0.0, -0.35),
            (0.0, 0.0, -0.5), (0.0, 0.35, -0.35), (0.0, 0.5, 0.0),
            (0.0, 0.35, 0.35), (0.0, 0.0, 0.5), (0.0, -0.35, 0.35),
            (0.0, -0.5, 0.0), (0.0, -0.35, -0.35), (0.0, 0.0, -0.5)
            ],
        'spikedCircle' : [
            (0.0, 0.0, -1.0), (-0.291, 0.0, -0.707), (-0.707, 0.0, -0.707),
            (-0.707, 0.0, -0.291), (-1.0, -0.0, 0.0), (-0.707, -0.0, 0.291),
            (-0.707, -0.0, 0.707), (-0.291, -0.0, 0.707), (0.0, -0.0, 1.0),
            (0.291, -0.0, 0.707), (0.707, -0.0, 0.707), (0.707, -0.0, 0.291),
            (1.0, 0.0, -0.0), (0.707, 0.0, -0.291), (0.707, 0.0, -0.707),
            (0.291, 0.0, -0.707), (-0.0, 0.0, -1.0)
            ],
        'square' : [
            (-1.0, 0.0, 1.0), (1.0, 0.0, 1.0), (1.0, -0.0, -1.0),
            (-1.0, -0.0, -1.0), (-1.0, 0.0, 1.0)
            ],
        'thinArrow' : [
            (0.0, 0.0, 0.0), (0.0, 1.0, 0.0), (0.0, 0.813, 0.125),
            (0.125, 0.813, 0.0), (0.0, 0.813, -0.125), (-0.125, 0.813, 0.0),
            (0.0, 0.813, 0.125), (0.0, 1.0, 0.0), (0.125, 0.813, 0.0),
            (0.0, 1.0, 0.0), (0.0, 0.813, -0.125), (0.0, 1.0, 0.0),
            (-0.125, 0.813, 0.0)
            ],
        'tube' : [
            (-0.5, -0.5, 0.0), (-0.5, 0.5, 0.0), (-0.35, 0.5, -0.35),
            (-0.35, -0.5, -0.35), (0.0, -0.5, -0.5), (0.0, 0.5, -0.5),
            (0.35, 0.5, -0.35), (0.35, -0.5, -0.35), (0.5, -0.5, 0.0),
            (0.5, 0.5, 0.0), (0.35, 0.5, 0.35), (0.35, -0.5, 0.35),
            (0.0, -0.5, 0.5), (0.0, 0.5, 0.5), (-0.35, 0.5, 0.35),
            (-0.35, -0.5, 0.35), (-0.5, -0.5, 0.0), (-0.35, -0.5, -0.35),
            (0.0, -0.5, -0.5), (0.35, -0.5, -0.35), (0.5, -0.5, 0.0),
            (0.35, -0.5, 0.35), (0.0, -0.5, 0.5), (-0.35, -0.5, 0.35),
            (-0.35, 0.5, 0.35), (-0.5, 0.5, 0.0), (-0.35, 0.5, -0.35),
            (0.0, 0.5, -0.5), (0.35, 0.5, -0.35), (0.5, 0.5, 0.0),
            (0.35, 0.5, 0.35), (0.0, 0.5, 0.5)
            ],
        'verticalCurvedArrow' : [
            (0.0, 0.794, -0.357), (0.0, 0.906, -0.47), (0.0, 1.0, -0.0),
            (0.0, 0.53, -0.094), (0.0, 0.644, -0.206), (0.0, 0.454, -0.351),
            (0.0, 0.235, -0.443), (0.0, 0.0, -0.473), (0.0, -0.235, -0.443),
            (0.0, -0.454, -0.351), (0.0, -0.644, -0.206), (0.0, -0.787, -0.018),
            (0.0, -0.972, -0.124), (0.0, -0.794, -0.357), (0.0, -0.561, -0.535),
            (0.0, -0.29, -0.648), (0.0, 0.0, -0.686), (0.0, 0.29, -0.648),
            (0.0, 0.561, -0.535), (0.0, 0.794, -0.357)
            ],
        'verticalCurvedArrowBi' : [
            (0.0, 0.794, -0.357), (0.0, 0.906, -0.47), (0.0, 1.0, -0.0),
            (0.0, 0.53, -0.094), (0.0, 0.644, -0.206), (0.0, 0.454, -0.351),
            (0.0, 0.235, -0.443), (0.0, 0.0, -0.473), (0.0, -0.235, -0.443),
            (0.0, -0.454, -0.351), (0.0, -0.644, -0.206), (0.0, -0.53, -0.094),
            (0.0, -1.0, -0.0), (0.0, -0.906, -0.47), (0.0, -0.794, -0.357),
            (0.0, -0.561, -0.535), (0.0, -0.29, -0.648), (0.0, 0.0, -0.686),
            (0.0, 0.29, -0.648), (0.0, 0.561, -0.535), (0.0, 0.794, -0.357)
            ],
    }
    return coordsDic

def list_categories():
    """Return an ordered list holding the names of all categories defined by
    PoRTo.
    
    PoRTo holds tools for quickly creating various curve shapes. These shapes
    are then sorted into different categories.
    This function return a list of those categories.
    """
    return [key for key in define_categories()]

def list_shapes():
    """Return a list holding the names of all curve shapes available for
    creation. List is in alphabetical order."""
    return [key for key in sorted(define_curve_coords().keys())]

def list_shapes_in_categories():
    """Return an ordered list of all shapes sorted into categories.
    
    PoRTo holds tools for quickly creating various curve shapes. These shapes
    are then sorted into different categories.
    This function return a list of those shapes.
    """
    categoriesDic=define_categories()
    shapes=[]
    for key in categoriesDic:
        shapes += categoriesDic[key]
    return shapes


#